// Generated by CoffeeScript 1.8.0
(function() {
  document.addEventListener("DOMContentLoaded", function() {
    var d, el, extra_arc, fly, land, lastX, lastY, plane, plane_data, plane_id, reset, right, rot, schedule_flight, x, y, ydiff, _i, _len, _ref, _ref1;
    plane_data = {};
    schedule_flight = function() {
      var available, data, id, plane_id;
      available = (function() {
        var _results;
        _results = [];
        for (id in plane_data) {
          data = plane_data[id];
          if (!data['in_flight']) {
            _results.push(id);
          }
        }
        return _results;
      })();
      if (available.length === 0) {
        setTimeout(schedule_flight, 500);
        return;
      }
      plane_id = available[Math.floor(Math.random() * available.length)];
      return setTimeout((function() {
        return fly(plane_id);
      }), Math.random() * 1500 + 500);
    };
    fly = function(plane_id) {
      var data, new_rot, plane, plane_inner;
      plane = document.getElementById("plane" + plane_id);
      plane_data[plane_id]['in_flight'] = true;
      data = plane_data[plane_id];
      plane.style.left = data['right'] ? "-" + ydiff + "px" : "0px";
      plane.style.top = "0px";
      plane.style.webkitTransform = "rotate(" + (data['right'] ? "+" : "-") + "180deg)";
      plane_inner = plane.children[0];
      new_rot = data["right"] ? data["rot"] - 180 + 2 * data['extra_arc'] : data["rot"] + 180 - 2 * data['extra_arc'];
      plane_inner.style.webkitTransform = "rotate(" + new_rot + "deg)";
      this.plane = plane;
      setTimeout((function() {
        return document.getElementById("plane" + plane_id).classList.add("visible");
      }), 1000);
      setTimeout((function() {
        return land(plane_id);
      }), 2800);
      return schedule_flight();
    };
    land = function(plane_id) {
      var plane;
      plane = document.getElementById("plane" + plane_id);
      plane.classList.remove("visible");
      return setTimeout((function() {
        return reset(plane_id);
      }), 1000);
    };
    reset = function(plane_id) {
      var data, plane;
      plane = document.getElementById("plane" + plane_id);
      plane_data[plane_id]['in_flight'] = false;
      plane.classList.add("red");
      data = plane_data[plane_id];
      plane.style.left = "" + plane_data[plane_id]["left"] + "px";
      plane.style.top = "" + plane_data[plane_id]["top"] + "px";
      plane.style.webkitTransform = "rotate(0deg)";
      plane.children[0].style.webkitTransform = "rotate(" + plane_data[plane_id]["rot"] + "deg)";
      return setTimeout((function() {
        return plane.classList.remove("red");
      }), 50);
    };
    plane_id = 0;
    _ref = document.getElementsByClassName("city");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      el = _ref[_i];
      x = el.getAttribute('data-x') * 9 - 5;
      el.style.left = x + "px";
      y = el.getAttribute('data-y') * 9 - 5;
      el.style.top = y + "px";
      el.innerHTML = "<div class='tooltip-wrap'><div class='tooltip'><div class='date'>" + el.getAttribute('data-date') + "</div><div class='name'>" + el.getAttribute('data-name') + "</div></div></div>";
      if (typeof lastX !== "undefined" && lastX !== null) {
        d = Math.sqrt(Math.pow(lastX - x, 2) + Math.pow(lastY - y, 2));
        if (d > 70) {
          right = lastX < x;
          ydiff = Math.abs(lastX - x) / 3;
          rot = -180 / Math.PI * (Math.atan2(lastX - x, lastY - y) + .5 * Math.PI);
          extra_arc = 35 - (y - lastY) / 3;
          rot = right ? rot - extra_arc : rot + extra_arc;
          plane_data[plane_id] = {
            right: right,
            ydiff: ydiff,
            rot: rot,
            extra_arc: extra_arc,
            left: right ? lastX - x : lastX - x - ydiff,
            top: lastY - y - ydiff,
            in_flight: false
          };
          plane = "<div class='plane-wrapper' id='plane" + plane_id + "' style='left: " + plane_data[plane_id]["left"] + "px; top: " + plane_data[plane_id]["top"] + "px;  width: " + ydiff + "px; height: " + ydiff + "px'><div class='" + (right ? "right" : "left") + "' style='-webkit-transform: rotate(" + rot + "deg)'></div></div>";
          el.setAttribute("plane_id", plane_id);
          el.innerHTML += plane;
          plane_id += 1;
        }
      }
      _ref1 = [x, y], lastX = _ref1[0], lastY = _ref1[1];
    }
    return schedule_flight();
  });

}).call(this);
